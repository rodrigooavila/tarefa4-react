{"version":3,"sources":["Toggle.js","Signup.js","App.js","reportWebVitals.js","index.js"],"names":["DarkButton","styled","button","theme","text","Toggle","themeLabel","toggleTheme","label","join","onClick","GlobalLayout","createGlobalStyle","body","lightTheme","darkTheme","SignupForm","className","type","placeholder","Component","App","props","state","setState","this","Signup","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAIA,IAAMA,EAAaC,IAAOC,OAAV,KACH,qBAAGC,MAAkBC,QAUnBC,EAPA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACtBC,EAAQ,CAAC,aAA6B,UAAfF,EAAyB,SAAW,SAASG,KAAK,KAC7E,OAAS,eACLT,EADK,CACMU,QAAYH,EADlB,cACoCC,EADpC,Q,oICHN,IAAMG,EAAeC,YAAH,KAEP,qBAAGT,MAAkBU,QAC1B,qBAAGV,MAAkBC,QAGrBU,EAAa,CACtBD,KAAM,UACNT,KAAM,WAGGW,EAAY,CACrBF,KAAM,UACNT,KAAM,WA4BKY,E,uKAlBP,OAAS,sBACDC,UAAY,OADX,UAEL,4DAFK,IAGgC,uBAC/BC,KAAO,QACbC,YAAc,sBACd,wBACOD,KAAO,SADd,8B,GAZaE,aC8BVC,G,wDA3CX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVf,YAAc,WACe,UAArB,EAAKgB,MAAMpB,MACX,EAAKqB,SAAS,CACVrB,MAAO,SAGX,EAAKqB,SAAS,CACVrB,MAAO,WAZf,EAAKoB,MAAQ,CACTpB,MAAO,SAHI,E,qDAsBf,OAAS,eACL,IADK,CACSA,MAA8B,SAApBsB,KAAKF,MAAMpB,MAAmBW,EAAaC,EAD9D,UAEL,cACAJ,EADA,IAEA,sBACIM,UAAY,MADhB,UAEA,cACA,EADA,CACOX,WAAemB,KAAKF,MAAMpB,MACjCI,YAAgBkB,KAAKlB,cAJrB,IAKG,kCACC,cAAEmB,EAAF,IADD,UATE,W,GAxBCN,cCGHO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.412686f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport styled from \"styled-components\"\r\n\r\nconst DarkButton = styled.button `\r\n    color: ${({ theme }) => theme.text};\r\n`;\r\n\r\nconst Toggle = ({ themeLabel, toggleTheme }) => {\r\n    let label = ['Mudar para', themeLabel === 'light' ? 'Escuro' : 'Claro'].join(' ');\r\n    return ( <\r\n        DarkButton onClick = { toggleTheme } > { label } < /DarkButton>\r\n    );\r\n}\r\n\r\nexport default Toggle;","import React from 'react';\nimport { Component } from 'react';\nimport { createGlobalStyle } from \"styled-components\";\nimport Toggle from './Toggle';\n\n\n\nexport const GlobalLayout = createGlobalStyle `\n\tbody{\n\t\t\t\tbackground: ${({ theme }) => theme.body};\n\t\t\t\tcolor: ${({ theme }) => theme.text};\n\t}\n`;\nexport const lightTheme = {\n    body: '#2196F3',\n    text: '#363537',\n}\n\nexport const darkTheme = {\n    body: '#363537',\n    text: '#FAFAFA',\n}\n\n\nclass SignupForm extends Component {\n\n\n\n    render() {\n\n        return ( <\n            div className = \"form\" >\n            <\n            h2 > Sign up to my newsletter < /h2> <\n            input type = \"email\"\n            placeholder = \"example@email.com\" / >\n            <\n            button type = \"submit\" > Sign up < /button> \n\n\n            <\n            /div>\n        );\n\n    }\n}\n\n\nexport default SignupForm;","import SignupForm from './Signup';\nimport Toggle from './Toggle';\nimport React, { Component } from 'react';\nimport './App.css';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme, GlobalLayout } from './Signup';\n\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            theme: \"light\",\n        }\n    };\n\n    toggleTheme = () => {\n        if (this.state.theme === 'light') {\n            this.setState({\n                theme: 'dark',\n            });\n        } else {\n            this.setState({\n                theme: 'light',\n            });\n        }\n    }\n\n\n    render() {\n\n        return ( <\n            ThemeProvider theme = { this.state.theme == 'light' ? lightTheme : darkTheme } >\n            <\n            GlobalLayout / >\n            <\n            div className = \"App\" >\n            <\n            Toggle themeLabel = { this.state.theme }\n            toggleTheme = { this.toggleTheme }\n            /> <\n            p > < SignupForm / > < /p>\n\n            <\n            /div> < /\n            ThemeProvider >\n        );\n    }\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}